#+TITLE: bashrc.org
#+AUTHOR: Gregory Loftus
#+LAST UPDATED: [2021-01-07 Thu]
#+PROPERTY: header-args :tangle bashrc


* tldr

This is an org file that creates .bashrc via an org-babel tangle.

* generic stuff

  This is the generic .bashrc that should accompany you everywhere

#+BEGIN_SRC sh
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#+END_SRC

* history

#+BEGIN_SRC sh

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# enlarged for personal use
HISTSIZE=10000
HISTFILESIZE=20000

#+END_SRC

* prompt

#+BEGIN_SRC sh

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

#PS1="[\u@\h] \[\e[1;34m\]\D{%H:%M:%S}\[\e[0m\] \[\e[1;32m\][ \w ]\[\e[0m\] \n \[\e[1;31m\]-> \[\e[0m\]"
#PS2=" \[\e[1;31m\]-> \[\e[0m\]"

PS1="\u@\h \[\e[1;34m\]\D{%H:%M:%S}\[\e[0m\] \[\e[1;32m\] \w \[\e[0m\] \n \[\e[38;5;214m\]Î¾ \[\e[0m\]"



#+END_SRC

* aliases

#+BEGIN_SRC sh

# Aliases

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases

alias la='ls -A'
alias ls='ls -loh --color=auto --group-directories-first'
alias dud='du -h */ --max-depth=0'

#+END_SRC

* paths

#+BEGIN_SRC sh

if [ -d "$HOME/bin" ] ; then
  PATH="$HOME/bin:$PATH"
fi

#export PATH="/opt/anaconda3/bin:$PATH"
#export PATH="/opt/apache-maven-3.5.2/bin:$PATH"
#export PATH="/opt/firefox:$PATH"
#export PATH="$PATH:/usr/local/bin/elixir"

#+END_SRC

* goodies

#+BEGIN_SRC sh

# CLI Weather Info
alias weather='curl http://wttr.in/boston'

#+END_SRC
  
* key mapping

Swap Ctrl and Caps Lock

first create a file =~/.xmodmap= as such:

EXAMPLE?

then in .bashrc call xmodmap on it:

#+BEGIN_SRC sh
# custom keymap
xmodmap ~/.xmodmap
#+END_SRC

* local

  This section is for bash stuff that is local.
  Work environments vs personal environments, etc

  Q: How can we keep multiple environments here
     but only build a single environment for a single machine?
   

